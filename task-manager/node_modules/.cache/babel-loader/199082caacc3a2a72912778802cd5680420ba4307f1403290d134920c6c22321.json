{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\task-manager\\\\src\\\\components\\\\TaskManager.jsx\";\nimport React, { Component } from \"react\";\nimport TaskList from \"./TaskList\";\nimport TaskForm from \"./TaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TaskManager extends Component {\n  constructor(props) {\n    super(props);\n    this.addTask = taskName => {\n      const newTask = {\n        id: Date.now(),\n        name: taskName,\n        completed: false\n      };\n      this.setState({\n        tasks: [...this.state.tasks, newTask]\n      });\n    };\n    this.deleteTask = taskId => {\n      const filteredTasks = this.state.tasks.filter(task => task.id !== taskId);\n      this.setState({\n        tasks: filteredTasks\n      });\n    };\n    this.toggleCompletion = taskId => {\n      const updatedTasks = this.state.tasks.map(task => task.id === taskId ? {\n        ...task,\n        completed: !task.completed\n      } : task);\n      this.setState({\n        tasks: updatedTasks\n      });\n    };\n    this.state = {\n      tasks: [{\n        id: 1,\n        name: \"Sample Task 1\",\n        completed: false\n      }, {\n        id: 2,\n        name: \"Sample Task 2\",\n        completed: true\n      }]\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-manager\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        addTask: this.addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: this.state.tasks,\n        deleteTask: this.deleteTask,\n        toggleCompletion: this.toggleCompletion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TaskManager;","map":{"version":3,"names":["React","Component","TaskList","TaskForm","jsxDEV","_jsxDEV","TaskManager","constructor","props","addTask","taskName","newTask","id","Date","now","name","completed","setState","tasks","state","deleteTask","taskId","filteredTasks","filter","task","toggleCompletion","updatedTasks","map","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/react/task-manager/src/components/TaskManager.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport TaskList from \"./TaskList\";\r\nimport TaskForm from \"./TaskForm\";\r\n\r\nclass TaskManager extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [\r\n        { id: 1, name: \"Sample Task 1\", completed: false },\r\n        { id: 2, name: \"Sample Task 2\", completed: true },\r\n      ],\r\n    };\r\n  }\r\n\r\n  addTask = (taskName) => {\r\n    const newTask = {\r\n      id: Date.now(),\r\n      name: taskName,\r\n      completed: false,\r\n    };\r\n    this.setState({ tasks: [...this.state.tasks, newTask] });\r\n  };\r\n\r\n  deleteTask = (taskId) => {\r\n    const filteredTasks = this.state.tasks.filter((task) => task.id !== taskId);\r\n    this.setState({ tasks: filteredTasks });\r\n  };\r\n\r\n  toggleCompletion = (taskId) => {\r\n    const updatedTasks = this.state.tasks.map((task) =>\r\n      task.id === taskId ? { ...task, completed: !task.completed } : task\r\n    );\r\n    this.setState({ tasks: updatedTasks });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"task-manager\">\r\n        <h1>Task Manager</h1>\r\n        <TaskForm addTask={this.addTask} />\r\n        <TaskList\r\n          tasks={this.state.tasks}\r\n          deleteTask={this.deleteTask}\r\n          toggleCompletion={this.toggleCompletion}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskManager;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,SAASL,SAAS,CAAC;EAClCM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KASfC,OAAO,GAAIC,QAAQ,IAAK;MACtB,MAAMC,OAAO,GAAG;QACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAEL,QAAQ;QACdM,SAAS,EAAE;MACb,CAAC;MACD,IAAI,CAACC,QAAQ,CAAC;QAAEC,KAAK,EAAE,CAAC,GAAG,IAAI,CAACC,KAAK,CAACD,KAAK,EAAEP,OAAO;MAAE,CAAC,CAAC;IAC1D,CAAC;IAAA,KAEDS,UAAU,GAAIC,MAAM,IAAK;MACvB,MAAMC,aAAa,GAAG,IAAI,CAACH,KAAK,CAACD,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACZ,EAAE,KAAKS,MAAM,CAAC;MAC3E,IAAI,CAACJ,QAAQ,CAAC;QAAEC,KAAK,EAAEI;MAAc,CAAC,CAAC;IACzC,CAAC;IAAA,KAEDG,gBAAgB,GAAIJ,MAAM,IAAK;MAC7B,MAAMK,YAAY,GAAG,IAAI,CAACP,KAAK,CAACD,KAAK,CAACS,GAAG,CAAEH,IAAI,IAC7CA,IAAI,CAACZ,EAAE,KAAKS,MAAM,GAAG;QAAE,GAAGG,IAAI;QAAER,SAAS,EAAE,CAACQ,IAAI,CAACR;MAAU,CAAC,GAAGQ,IACjE,CAAC;MACD,IAAI,CAACP,QAAQ,CAAC;QAAEC,KAAK,EAAEQ;MAAa,CAAC,CAAC;IACxC,CAAC;IA3BC,IAAI,CAACP,KAAK,GAAG;MACXD,KAAK,EAAE,CACL;QAAEN,EAAE,EAAE,CAAC;QAAEG,IAAI,EAAE,eAAe;QAAEC,SAAS,EAAE;MAAM,CAAC,EAClD;QAAEJ,EAAE,EAAE,CAAC;QAAEG,IAAI,EAAE,eAAe;QAAEC,SAAS,EAAE;MAAK,CAAC;IAErD,CAAC;EACH;EAuBAY,MAAMA,CAAA,EAAG;IACP,oBACEvB,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BzB,OAAA;QAAAyB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB7B,OAAA,CAACF,QAAQ;QAACM,OAAO,EAAE,IAAI,CAACA;MAAQ;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnC7B,OAAA,CAACH,QAAQ;QACPgB,KAAK,EAAE,IAAI,CAACC,KAAK,CAACD,KAAM;QACxBE,UAAU,EAAE,IAAI,CAACA,UAAW;QAC5BK,gBAAgB,EAAE,IAAI,CAACA;MAAiB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAe5B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}